/*
Alldebrid API

Welcome to the Alldebrid API! You can use this API to access various Alldebrid services from custom applications or scripts.

API version: 4.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the V4HostsGet200ResponseDataStreamsValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V4HostsGet200ResponseDataStreamsValue{}

// V4HostsGet200ResponseDataStreamsValue struct for V4HostsGet200ResponseDataStreamsValue
type V4HostsGet200ResponseDataStreamsValue struct {
	Name    *string  `json:"name,omitempty"`
	Type    *string  `json:"type,omitempty"`
	Domains []string `json:"domains,omitempty"`
	Regexp  *string  `json:"regexp,omitempty"`
	Regexps []string `json:"regexps,omitempty"`
	Status  *bool    `json:"status,omitempty"`
}

// NewV4HostsGet200ResponseDataStreamsValue instantiates a new V4HostsGet200ResponseDataStreamsValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV4HostsGet200ResponseDataStreamsValue() *V4HostsGet200ResponseDataStreamsValue {
	this := V4HostsGet200ResponseDataStreamsValue{}
	return &this
}

// NewV4HostsGet200ResponseDataStreamsValueWithDefaults instantiates a new V4HostsGet200ResponseDataStreamsValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV4HostsGet200ResponseDataStreamsValueWithDefaults() *V4HostsGet200ResponseDataStreamsValue {
	this := V4HostsGet200ResponseDataStreamsValue{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V4HostsGet200ResponseDataStreamsValue) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V4HostsGet200ResponseDataStreamsValue) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V4HostsGet200ResponseDataStreamsValue) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V4HostsGet200ResponseDataStreamsValue) SetType(v string) {
	o.Type = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *V4HostsGet200ResponseDataStreamsValue) GetDomains() []string {
	if o == nil || IsNil(o.Domains) {
		var ret []string
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) GetDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []string and assigns it to the Domains field.
func (o *V4HostsGet200ResponseDataStreamsValue) SetDomains(v []string) {
	o.Domains = v
}

// GetRegexp returns the Regexp field value if set, zero value otherwise.
func (o *V4HostsGet200ResponseDataStreamsValue) GetRegexp() string {
	if o == nil || IsNil(o.Regexp) {
		var ret string
		return ret
	}
	return *o.Regexp
}

// GetRegexpOk returns a tuple with the Regexp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) GetRegexpOk() (*string, bool) {
	if o == nil || IsNil(o.Regexp) {
		return nil, false
	}
	return o.Regexp, true
}

// HasRegexp returns a boolean if a field has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) HasRegexp() bool {
	if o != nil && !IsNil(o.Regexp) {
		return true
	}

	return false
}

// SetRegexp gets a reference to the given string and assigns it to the Regexp field.
func (o *V4HostsGet200ResponseDataStreamsValue) SetRegexp(v string) {
	o.Regexp = &v
}

// GetRegexps returns the Regexps field value if set, zero value otherwise.
func (o *V4HostsGet200ResponseDataStreamsValue) GetRegexps() []string {
	if o == nil || IsNil(o.Regexps) {
		var ret []string
		return ret
	}
	return o.Regexps
}

// GetRegexpsOk returns a tuple with the Regexps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) GetRegexpsOk() ([]string, bool) {
	if o == nil || IsNil(o.Regexps) {
		return nil, false
	}
	return o.Regexps, true
}

// HasRegexps returns a boolean if a field has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) HasRegexps() bool {
	if o != nil && !IsNil(o.Regexps) {
		return true
	}

	return false
}

// SetRegexps gets a reference to the given []string and assigns it to the Regexps field.
func (o *V4HostsGet200ResponseDataStreamsValue) SetRegexps(v []string) {
	o.Regexps = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V4HostsGet200ResponseDataStreamsValue) GetStatus() bool {
	if o == nil || IsNil(o.Status) {
		var ret bool
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) GetStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V4HostsGet200ResponseDataStreamsValue) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given bool and assigns it to the Status field.
func (o *V4HostsGet200ResponseDataStreamsValue) SetStatus(v bool) {
	o.Status = &v
}

func (o V4HostsGet200ResponseDataStreamsValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V4HostsGet200ResponseDataStreamsValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !IsNil(o.Regexp) {
		toSerialize["regexp"] = o.Regexp
	}
	if !IsNil(o.Regexps) {
		toSerialize["regexps"] = o.Regexps
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV4HostsGet200ResponseDataStreamsValue struct {
	value *V4HostsGet200ResponseDataStreamsValue
	isSet bool
}

func (v NullableV4HostsGet200ResponseDataStreamsValue) Get() *V4HostsGet200ResponseDataStreamsValue {
	return v.value
}

func (v *NullableV4HostsGet200ResponseDataStreamsValue) Set(val *V4HostsGet200ResponseDataStreamsValue) {
	v.value = val
	v.isSet = true
}

func (v NullableV4HostsGet200ResponseDataStreamsValue) IsSet() bool {
	return v.isSet
}

func (v *NullableV4HostsGet200ResponseDataStreamsValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV4HostsGet200ResponseDataStreamsValue(val *V4HostsGet200ResponseDataStreamsValue) *NullableV4HostsGet200ResponseDataStreamsValue {
	return &NullableV4HostsGet200ResponseDataStreamsValue{value: val, isSet: true}
}

func (v NullableV4HostsGet200ResponseDataStreamsValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV4HostsGet200ResponseDataStreamsValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
